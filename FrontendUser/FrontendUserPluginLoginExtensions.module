<?php
/**
 * Processwire 'FrontendUserPluginLoginExtensions' module
 * 
 * Extends FrontendUser login with additional features.
 * 
 * @author pwFoo
 * @since 2015-05-01
 * 
 * ProcessWire 2.x
 * Copyright (C) 2011 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 *
 * http://www.processwire.com
 * http://www.ryancramer.com
 */
class FrontendUserPluginLoginExtensions extends WireData implements Module {
    /**
     * getModuleInfo is a module required by all modules to tell ProcessWire about them
     * 
     * @return array
     */
    public static function getModuleInfo() {
        return array(
            'title' => 'FrontendUserPluginLoginExtensions',
            'summary' => 'Extends FrontendUser login with additional features',
            'version' => '001',
            'requires'  => 'FrontendUser',
        );
    }
    
    public function persist($form) {
        $persist = $this->modules->get('InputfieldCheckboxes');
        $persist->name = 'persist';
        $persist->attr('id+name', 'persist');
        $persist->skipLabel = 4;
        $persist->addoption('persist', $this->_('Remember me?'));
        $persist->addHookAfter('Session::login', function($event) use (&$persist) {
            if (isset($persist->value[0]) && $persist->value[0] === 'persist') {
                wire('modules')->get('LoginPersist')->persist();
            }
        });
        $form->add($persist);    
    }
    
    public function forgot($form) {
        $forgot = $this->modules->get('InputfieldMarkup');
        $forgot->value = "<a href='{$this->page->url}?forgot=1'>{$this->_('Forgot password?')}</a>";
        $forgot->addHookBefore('FrontendUser::render', function($event) {
            if (wire('input')->get->forgot) {
                //wire('config')->styles->add('/pw/wire/modules/AdminTheme/AdminThemeDefault/styles/main-classic.css');
                $event->return = wire('modules')->get('ProcessForgotPassword')->execute();
                $event->replace = true;
             }   
        });
        $form->add($forgot);    
    }
    
}